var GeoJSON=function(e,t){var n=function(e,t,s){var o;switch(e.type){case"Point":t.position=new google.maps.LatLng(e.coordinates[1],e.coordinates[0]),o=new google.maps.Marker(t),s&&o.set("geojsonProperties",s);break;case"MultiPoint":o=[];for(var u=0;u<e.coordinates.length;u++)t.position=new google.maps.LatLng(e.coordinates[u][1],e.coordinates[u][0]),o.push(new google.maps.Marker(t));if(s)for(var a=0;a<o.length;a++)o[a].set("geojsonProperties",s);break;case"LineString":var f=[];for(var u=0;u<e.coordinates.length;u++){var l=e.coordinates[u],c=new google.maps.LatLng(l[1],l[0]);f.push(c)}t.path=f,o=new google.maps.Polyline(t),s&&o.set("geojsonProperties",s);break;case"MultiLineString":o=[];for(var u=0;u<e.coordinates.length;u++){var f=[];for(var h=0;h<e.coordinates[u].length;h++){var l=e.coordinates[u][h],c=new google.maps.LatLng(l[1],l[0]);f.push(c)}t.path=f,o.push(new google.maps.Polyline(t))}if(s)for(var a=0;a<o.length;a++)o[a].set("geojsonProperties",s);break;case"Polygon":var p=[],d,v;for(var u=0;u<e.coordinates.length;u++){var f=[];for(var h=0;h<e.coordinates[u].length;h++){var c=new google.maps.LatLng(e.coordinates[u][h][1],e.coordinates[u][h][0]);f.push(c)}u?u==1?(v=i(f),d==v?p.push(f.reverse()):p.push(f)):d==v?p.push(f.reverse()):p.push(f):(d=i(f),p.push(f))}t.paths=p,o=new google.maps.Polygon(t),s&&o.set("geojsonProperties",s);break;case"MultiPolygon":o=[];for(var u=0;u<e.coordinates.length;u++){var p=[],d,v;for(var h=0;h<e.coordinates[u].length;h++){var f=[];for(var a=0;a<e.coordinates[u][h].length;a++){var c=new google.maps.LatLng(e.coordinates[u][h][a][1],e.coordinates[u][h][a][0]);f.push(c)}h?h==1?(v=i(f),d==v?p.push(f.reverse()):p.push(f)):d==v?p.push(f.reverse()):p.push(f):(d=i(f),p.push(f))}t.paths=p,o.push(new google.maps.Polygon(t))}if(s)for(var a=0;a<o.length;a++)o[a].set("geojsonProperties",s);break;case"GeometryCollection":o=[];if(!e.geometries)o=r('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');else for(var u=0;u<e.geometries.length;u++)o.push(n(e.geometries[u],t,s||null));break;default:o=r('Invalid GeoJSON object: Geometry object must be one of "Point", "LineString", "Polygon" or "MultiPolygon".')}return o},r=function(e){return{type:"Error",message:e}},i=function(e){var t,n=0;for(var r=0;r<e.length-2;r++)n+=(e[r+1].lat()-e[r].lat())*(e[r+2].lng()-e[r].lng())-(e[r+2].lat()-e[r].lat())*(e[r+1].lng()-e[r].lng());return n>0?t=!0:t=!1,t},s,o=t||{};switch(e.type){case"FeatureCollection":if(!e.features)s=r('Invalid GeoJSON object: FeatureCollection object missing "features" member.');else{s=[];for(var u=0;u<e.features.length;u++)s.push(n(e.features[u].geometry,o,e.features[u].properties))}break;case"GeometryCollection":if(!e.geometries)s=r('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');else{s=[];for(var u=0;u<e.geometries.length;u++)s.push(n(e.geometries[u],o))}break;case"Feature":!e.properties||!e.geometry?s=r('Invalid GeoJSON object: Feature object missing "properties" or "geometry" member.'):s=n(e.geometry,o,e.properties);break;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":case"Polygon":case"MultiPolygon":s=e.coordinates?s=n(e,o):r('Invalid GeoJSON object: Geometry object missing "coordinates" member.');break;default:s=r('Invalid GeoJSON object: GeoJSON object must be one of "Point", "LineString", "Polygon", "MultiPolygon", "Feature", "FeatureCollection" or "GeometryCollection".')}return s};